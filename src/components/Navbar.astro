---
import AccountButton from "@/components/AccountButton.astro";
import MyAnimesButton from "@/components/MyAnimesButton.astro";

const { hide = false } = Astro.props;
---

<header
  class={`${hide ? "hidden" : ""} fixed top-0 -left-0 w-full z-100 px-4 sm:px-8 pt-2`}
>
  <div
    id="navbar-container"
    class="bg-transparent rounded-lg flex items-center justify-between px-4 py-2"
  >
    <div class="flex items-center gap-8">
      <a href="/" class="text-white text-xl font-semibold">AnimeList</a>
      <div class="flex gap-1 items-center relative" id="nav-links">
        <div class="marker absolute bg-white/40 rounded-xl z-[-1]"></div>
        <a
          href="/"
          class="nav-link px-4 py-2 text-sm text-white font-medium rounded-xl"
          >Home</a
        >
        <a
          href="/animes"
          class="nav-link px-4 py-2 text-sm text-white font-medium rounded-xl"
          >Explore</a
        >
        <a
          href="/animes?category=recents"
          class="nav-link px-4 py-2 text-sm text-white font-medium rounded-xl"
          >Recents</a
        >
        <a
          href="/animes?category=populars"
          class="nav-link px-4 py-2 text-sm text-white font-medium rounded-xl"
          >Populars</a
        >
        <a
          href="/categories"
          class="nav-link px-4 py-2 text-sm text-white font-medium rounded-xl"
          >Categories</a
        >
      </div>
    </div>
    <div class="flex gap-2 items-center">
      <MyAnimesButton server:defer />
      <a
        href="/search"
        class="flex items-center justify-center p-2.5 text-white hover:bg-white/40 rounded-lg cursor-pointer transition-colors"
      >
        <svg
          class="size-4"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
            d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"></path><path
            d="M21 21l-6 -6"></path></svg
        >
      </a>
      <AccountButton server:defer />
    </div>
  </div>
</header>

<script>
  import gsap from "gsap";
  import Flip from "gsap/Flip";

  gsap.registerPlugin(Flip);

  document.addEventListener("astro:page-load", () => {
    const navbarContainer = document.querySelector("#navbar-container");
    if (navbarContainer) {
      document.addEventListener("scroll", () => {
        const scrolled = window.scrollY > 70;
        navbarContainer.classList.toggle("background-blur", scrolled);
        navbarContainer.classList.toggle("bg-transparent", !scrolled);
      });
    }

    const links = gsap.utils.toArray(".nav-link");
    const marker = document.querySelector(".marker");
    const navContainer = document.querySelector("#nav-links");

    if (marker && links.length > 0) {
      const currentUrl = new URL(window.location.href);
      let activeLink =
        links.find((link) => {
          const linkUrl = new URL(link.href);
          return (
            linkUrl.pathname === currentUrl.pathname &&
            linkUrl.search === currentUrl.search
          );
        }) || links[0];

      links.forEach((link) => link.classList.remove("font-bold"));
      activeLink.classList.add("font-bold");

      const setMarkerPosition = (target) => {
        const state = Flip.getState(marker);
        const bounds = target.getBoundingClientRect();
        const containerBounds = navContainer.getBoundingClientRect();

        gsap.set(marker, {
          width: bounds.width,
          height: bounds.height,
          x: bounds.left - containerBounds.left,
          y: bounds.top - containerBounds.top,
        });

        Flip.from(state, {
          duration: 0.3,
          ease: "power2.out",
        });
      };

      setMarkerPosition(activeLink);

      links.forEach((link) => {
        link.addEventListener("mouseenter", () => setMarkerPosition(link));
        link.addEventListener("mouseleave", () =>
          setMarkerPosition(activeLink)
        );

        link.addEventListener("click", () => {
          activeLink = link;
          links.forEach((l) => l.classList.remove("font-bold"));
          activeLink.classList.add("font-bold");
        });
      });
    }
  });
</script>